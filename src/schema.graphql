input accountBookInput {
  AccountTitle: String
  swiftCode: String
  AccountNo: String
  isActive: Boolean
  AccountId: ID!
  AccountBookId: ID
}

type AccountBook {
  _id: ID!
  AccountTitle: String
  swiftCode: String
  AccountNo: String
  isActive: Boolean
}

input AvailableFulfillmentMethodInput {
  AccountId: ID!
  FulfillmentMethodId: ID!
  status: Boolean!
}

scalar AvailableFulfillmentMethod

extend type Mutation {
  updateAccountpayBookEntry(input: accountBookInput): AccountBook
  updateAvailableFulfillmentMethodEntry(
    input: AvailableFulfillmentMethodInput
  ): [AvailableFulfillmentMethod]
  getAllSeller: [Account]
}

extend type ProductVariant {
  uploadedBy: uploadedBy
  ancestorId: ID
  parentId: ID
}
extend input ProductVariantInput {
  uploadedBy: uploadedByinput
}

extend type CatalogProductVariant {
  uploadedBy: uploadedBy
  ancestorId: ID
  parentId: ID
}
type uploadedBy {
  name: String
  image: String
  userId: ID
  FulfillmentMethods: [AvailableFulfillmentMethod]
}
input uploadedByinput {
  name: String
  image: String
  userId: ID
}
extend type Account {
  productVariants: [ProductVariant]
  identityVerified: Boolean
  orderFulfillment: [Order]
  AccountBook: [AccountBook]
  AvailableFulfillmentMethods: [AvailableFulfillmentMethod]
}

type Query {
  getAllSeller: [Account]
}
